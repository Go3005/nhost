name: Release

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'assets/**'
      - '**.md'
      - '!.changeset/**'
      - 'LICENSE'

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: nhost
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      dashboardVersion: ${{ steps.dashboard.outputs.dashboardVersion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Node and dependencies
        uses: ./.github/actions/install-dependencies
      - name: Create PR or Publish release
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run ci:version
          commit: 'chore: update versions'
          title: 'chore: update versions'
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Tag Dashboard
        id: dashboard
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          package="@nhost/dashboard"
          version=$(jq -r .version dashboard/package.json)
          tag="$package@$version"
          git tag $tag 2>/dev/null && (git push origin --tags ; echo "dashboardVersion=$version" >> $GITHUB_OUTPUT) || true

  publish:
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.dashboardVersion != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            nhost/dashboard
          tags: |
            type=raw,value=latest,enable=true
            type=semver,pattern={{version}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=semver,pattern={{major}},value=v${{ needs.version.outputs.dashboardVersion }}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v3
        timeout-minutes: 60
        with:
          context: .
          file: ./dashboard/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            TURBO_TOKEN=${{ env.TURBO_TOKEN }}
            TURBO_TEAM=${{ env.TURBO_TEAM }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
